openapi: 3.0.3
info:
  title: web3 API
  description: 这是web3 API的功能说明文档，其中包含编写过程中的疑问和需要删改的细节
  version: 1.0.0

tags:
  - name: account
  - name: good
paths:
  /api/open/account:
    post:
      tags:
        - account
      summary: 用户账号申请接口
      description: 创建用户，**之后为用户创建did**
      operationId: signUp
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignUpDto"
      responses:
        200:
          description: 申请成功
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/OkResponse"
                  # fix
                  - $ref: "#/components/schemas/SignUpOkResponse"
        
  /api/open/login:
    post:
      tags:
        - account
      summary: 用户账号登录接口
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignInDto"
      responses:
        200:
          description: 登录成功
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/OkResponse"
                  - $ref: "#/components/schemas/LoginOkResponse"

  /api/open/goodsList:
    get:
      tags:
        - account
        - good
      summary: 用户商品列表接口
      description: ""
      security:
        - bearerAuth: []
      responses:
        200:
          description: 获取列表成功
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/OkResponse"
                  - $ref: "#/components/schemas/GoodsListOkResponse"

  /api/open/info:
    get:
      tags:
        - account
      summary: "获取用户的具体信息"
      description: ""
      security:
        - bearerAuth: []
      responses:
        200:
          description: 登录成功
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/OkResponse"
                  - $ref: "#/components/schemas/InfoOkResponse"

  /api/open/goodsFind/:id:
    get:
      tags:
        - account
        - good
      summary: 用户商品详情接口
      description: ""
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: "数据id (应该在哪里填参数)"
          required: true
          schema:
            type: string
      responses:
        200:
          description: 获取列表成功
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/OkResponse"
                  - $ref: "#/components/schemas/GoodOkResponse"

  /api/open/chain/:id:
    patch:
      tags:
        - account
        - good
      summary: 上链修改状态
      description: "一般的数据都是未上链状态，当另一个微服务将商品上链后，则会调用此接口，将数据上链。"
      security:
        - adminAuth: []
      parameters:
        - name: id
          in: path
          description: "商品的数据库id"
          required: true
          schema:
            type: string
      responses:
        200:
          description: 修改成功
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/OkResponse"

  /api/open/createGoods:
    post:
      tags:
        - account
      summary: 创建商品
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateGoodsDto"
      responses:
        200:
          description: 添加成功
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/OkResponse"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "普通用户权限，需要在请求头中添加Authorization: Bearer {token}"
    adminAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "管理员权限，需要在请求头中添加Authorization: Bearer {token}"
  schemas:
    SignUpOkResponse:
      type: object
      properties:
        data:
          type: array
          items:
            type: object

    LoginOkResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Token"

    GoodsListOkResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Good"

    OkResponse:
      type: object
      properties:
        code:
          type: integer
          description: >
            1：成功；
            0：失败
          example: 1
          enum:
            - 1
            - 0
        info:
          type: string
          description: 提示信息
          example: 查询成功
    InfoOkResponse:
      type: object
      $ref: "#/components/schemas/User"
            

    SignUpDto:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          description: 密码
        name:
          type: string
          description: 名称

      required:
        - username
        - password

    SignInDto:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          description: 密码
      required:
        - username
        - password

    Token:
      type: object
      properties:
        access_token:
          type: string
          example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJ3ZWIiLCJleHAiOjE2ODM0MjQ5NTUsImF1ZCI6ImFwaSIsIm5iZiI6MTY4MzMzODU1NSwiaWF0IjoxNjgzMzM4NTU1LCJ1c2VyX2lkIjoxMDAxNH0.RMywbfxArKKIJp94lHiWf3b7ydl-4UjLzBm1SAzhV5I"
          description: token
        expires_in:
          type: number
          example: 86400
          description: "token有效时间（秒）"
    
    GoodOkResponse:
        type: object
        properties:
          data:
            type: object
            $ref: "#/components/schemas/Good"
              
    Good:
      type: object
      properties:
        id:
          type: integer
          description: 数据库id
          example: 192
        name:
          type: string
          description: 名称
          example: 商品4
        cover:
          type: string
          description: 封面图
          example: "/upload/38/ca4c6f99721ff3e2e3037cc4cd43c4.jpg"
        slider:
          type: string
          description: 轮播图
          example: "/upload/3e/a7cf5124dc4ae67e08a16b514ede42.jpg|/upload/38/ca4c6f99721ff3e2e3037cc4cd43c4.jpg"
        remarker:
          type: string
          description: 商品描述
          example: "一些描述"
        stock_total:
          type: integer
          description: "库存(这里应该是integer？)"
          example: 73
        stock_sales:
          type: integer
          description: "销量(这里应该是integer？)"
          example: 37
        price_selling:
          type: integer
          description: "价格(这里应该是integer？)"
          example: 200.00
        price_vouchers:
          type: integer
          description: "券额(这里应该是integer？)"
          example: 100
        type:
          type: string
          description: >
            1：电子券
            2：徽章
          example: 1
          enum:
            - 1
            - 2
    User:
      type: object
      properties:
        username:
          type: string
          description: "类型应该是string？ 账号"
          example: xiao3@qq.com
        nickname:
          type: string
          description: "名称"
          example: xiaoabc
        contact_phone:
          type: string
          description: 手机号
          example: ""
        enterprise_name:
          type: string
          description: 公司名
        card:
          type: string
          description: 身份证
        did:
          type: string
          description: did
          example: "xiaoab/web3HK"

    CreateGoodsDto:
        type: object
        properties:
          name:
            type: string
            description: 名称
          stock_total:
            type: number
            description: 数量
          price_selling:
            type: number
            description: 价格
          type:
            type: number
            description: 类型(1电子券 2徽章)
          cover:
            type: string
            description: 封面图
          slider:
            type: string
            description: 轮播图
          remark:
            type: string
            description: 描述(非必填)
          content:
            type: string
            description: 详情(非必填)
          price_vouchers:
            type: string
            description: 券额(当类型为电子券时必填)
        required:
          - name
          - stock_total
          - price_selling
          - type
          - cover
          - slider
          - remark
          - content
          - price_vouchers
